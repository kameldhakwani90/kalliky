import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

const newRestaurantPrompt = `Vous √™tes un expert en analyse de menus/catalogues restaurant. Analysez ce document (image/PDF/Excel) et extrayez AUTOMATIQUEMENT toutes les informations visibles.

üéØ MISSION : Cr√©er le catalogue complet avec d√©tection automatique des cat√©gories, tailles, et compositions

üìã R√àGLES STRICTES :
- Analysez TOUT le document de fa√ßon exhaustive
- D√©tectez automatiquement les cat√©gories depuis les titres/sections du document
- Si aucun produit visible, retournez {"products": []}
- Respectez exactement les noms et prix du document
- Ne jamais inventer de produits g√©n√©riques

üîç D√âTECTION AUTOMATIQUE :
1. **CAT√âGORIES** : Cherchez les titres/sections (PIZZA, BURGERS, DESSERTS, BOISSONS, etc.)
2. **TAILLES** : D√©tectez automatiquement (Petite/Moyenne/Grande, S/M/L, 20cm/30cm/40cm, etc.)
3. **COMPOSITIONS/√âTAPES** : Pour produits comme tacos, sandwichs - listez chaque √©tape/ingr√©dient visible
4. **PRIX VARIABLES** : Capturez tous les prix selon tailles/options

üìä FORMAT R√âPONSE (JSON OBLIGATOIRE) :
{
  "products": [
    {
      "name": "[NOM EXACT du produit]",
      "description": "[Description compl√®te si visible]", 
      "basePrice": [prix le plus bas en centimes],
      "category": "[CAT√âGORIE D√âTECT√âE depuis le document]",
      "components": [
        {
          "name": "[Ingr√©dient/√âtape de composition]",
          "basePrice": [prix si sp√©cifi√©, sinon 0],
          "category": "[M√™me cat√©gorie que le produit parent]"
        }
      ],
      "variations": [
        {
          "name": "[Taille/Option d√©tect√©e]",
          "priceDifference": [diff√©rence en centimes par rapport au basePrice],
          "category": "[SIZE|OPTION|SUPPLEMENT]"
        }
      ]
    }
  ]
}

üçï EXEMPLE D√âTECTION :
**Si le document montre :**
- Titre : "NOS PIZZAS" 
- Pizza Margherita : Petite 8‚Ç¨, Moyenne 12‚Ç¨, Grande 16‚Ç¨
- Ingr√©dients : Base tomate, Mozzarella, Basilic

**R√©sultat attendu :**
{
  "name": "Pizza Margherita",
  "basePrice": 800,
  "category": "PIZZAS",
  "components": [
    {"name": "Base tomate", "basePrice": 0, "category": "PIZZAS"},
    {"name": "Mozzarella", "basePrice": 0, "category": "PIZZAS"},
    {"name": "Basilic", "basePrice": 0, "category": "PIZZAS"}
  ],
  "variations": [
    {"name": "Petite", "priceDifference": 0, "category": "SIZE"},
    {"name": "Moyenne", "priceDifference": 400, "category": "SIZE"},
    {"name": "Grande", "priceDifference": 800, "category": "SIZE"}
  ]
}

üåÆ EXEMPLE COMPOSITION √âTAPES (Tacos) :
**Si d√©tect√© : "Tacos Poulet - √âtapes : 1.Galette, 2.Poulet grill√©, 3.Crudit√©s, 4.Sauce"**
{
  "name": "Tacos Poulet",
  "basePrice": [prix_d√©tect√©],
  "category": "TACOS", 
  "components": [
    {"name": "√âtape 1: Galette", "basePrice": 0, "category": "TACOS"},
    {"name": "√âtape 2: Poulet grill√©", "basePrice": 0, "category": "TACOS"},
    {"name": "√âtape 3: Crudit√©s", "basePrice": 0, "category": "TACOS"},
    {"name": "√âtape 4: Sauce", "basePrice": 0, "category": "TACOS"}
  ]
}

üí° INTELLIGENCE REQUISE :
- Reliez automatiquement chaque produit √† sa cat√©gorie d√©tect√©e
- Capturez toutes les variations de prix (tailles, options)
- Listez les √©tapes de composition quand visibles
- Gardez les noms exacts du document (pas de traduction)

üöÄ ANALYSEZ MAINTENANT ce document et cr√©ez le catalogue complet !`;

async function updateRestaurantPrompt() {
  try {
    console.log('üîÑ Mise √† jour du prompt RESTAURANT...');
    
    const updated = await prisma.businessCategoryConfig.update({
      where: { category: 'RESTAURANT' },
      data: { menuExtractionPrompt: newRestaurantPrompt }
    });
    
    console.log('‚úÖ Prompt RESTAURANT mis √† jour avec succ√®s');
    console.log('üìù Nouvelles fonctionnalit√©s:');
    console.log('- üéØ D√©tection automatique des cat√©gories depuis les titres');  
    console.log('- üìè D√©tection automatique des tailles et prix variables');
    console.log('- üîß Extraction des √©tapes de composition (ex: tacos)');
    console.log('- üçï Liaison automatique produits ‚Üí cat√©gories d√©tect√©es');
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updateRestaurantPrompt();